version: "2.0"
services:
  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    container_name: mlflow
    depends_on:
      - mlflow-storage
    environment:
      MLFLOW_BACKEND_STORE_URI: sqlite:///database/runs.db
      MLFLOW_ARTIFACTS_DESTINATION: ftp://alpineftp:alpineftp@mlflow-storage/ftp/alpineftp/
    command: >
      sh -c "cron &&
             mlflow server --host 0.0.0.0 --serve-artifacts  --gunicorn-opts '--timeout 900'
             # If you need to upgrade the database because mlflow tells you to, replace above mlflow server command with "mlflow db upgrade sqlite:///database/runs.db" and run once, then switch back
            "
    volumes:
      - database:/database

    restart: always

    labels:
      traefik.docker.network: traefik-proxy
      traefik.enable: "true"
      traefik.http.middlewares.mlflow-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.mlflow-secure.entrypoints: https
      traefik.http.routers.mlflow-secure.rule: Host(`mlflow-uvl.ifi.uni-heidelberg.de`)
      traefik.http.routers.mlflow-secure.service: mlflow
      traefik.http.routers.mlflow-secure.tls: "true"
      traefik.http.routers.mlflow-secure.middlewares: mlflow-auth
      traefik.http.routers.mlflow-secure.tls.certresolver: http
      traefik.http.routers.mlflow.entrypoints: http
      traefik.http.routers.mlflow.middlewares: mlflow-https-redirect
      traefik.http.routers.mlflow.rule: Host(`mlflow-uvl.ifi.uni-heidelberg.de`)
      traefik.http.services.mlflow.loadbalancer.server.port: "5000"
      traefik.http.middlewares.mlflow-auth.basicauth.users: ${BASIC_AUTH}
      traefik.http.middlewares.limit.buffering.maxRequestBodyBytes: "3221225472"
      traefik.http.middlewares.limit.buffering.maxResponseBodyBytes: "3221225472"

  mlflow-storage:
    image: delfer/alpine-ftp-server
    container_name: mlflow-storage
    environment:
      ADDRESS: mlflow-storage
    volumes:
      - storage:/ftp

    restart: always

volumes:
  database:
  storage:
